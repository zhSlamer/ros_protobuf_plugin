// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: publish_info.proto

#include "publish_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace superbai {
namespace sample {
class PublishInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishInfo>
      _instance;
} _PublishInfo_default_instance_;
class workDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<work>
      _instance;
} _work_default_instance_;
class dateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<date>
      _instance;
} _date_default_instance_;
}  // namespace sample
}  // namespace superbai
namespace protobuf_publish_5finfo_2eproto {
static void InitDefaultsPublishInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::superbai::sample::_PublishInfo_default_instance_;
    new (ptr) ::superbai::sample::PublishInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::superbai::sample::PublishInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublishInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublishInfo}, {}};

static void InitDefaultswork() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::superbai::sample::_work_default_instance_;
    new (ptr) ::superbai::sample::work();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::superbai::sample::work::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_work =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultswork}, {}};

static void InitDefaultsdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::superbai::sample::_date_default_instance_;
    new (ptr) ::superbai::sample::date();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::superbai::sample::date::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_date =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdate}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PublishInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_work.base);
  ::google::protobuf::internal::InitSCC(&scc_info_date.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::superbai::sample::PublishInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::superbai::sample::PublishInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::superbai::sample::PublishInfo, message_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::superbai::sample::PublishInfo, publish_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::superbai::sample::work, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::superbai::sample::date, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::superbai::sample::PublishInfo)},
  { 8, -1, sizeof(::superbai::sample::work)},
  { 13, -1, sizeof(::superbai::sample::date)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::superbai::sample::_PublishInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::superbai::sample::_work_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::superbai::sample::_date_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "publish_info.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022publish_info.proto\022\017superbai.sample\"F\n"
      "\013PublishInfo\022\014\n\004name\030\001 \001(\t\022\024\n\014message_ty"
      "pe\030\002 \001(\t\022\023\n\013publish_msg\030\003 \001(\t\"\006\n\004work\"\006\n"
      "\004dateb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 133);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "publish_info.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_publish_5finfo_2eproto
namespace superbai {
namespace sample {

// ===================================================================

void PublishInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishInfo::kNameFieldNumber;
const int PublishInfo::kMessageTypeFieldNumber;
const int PublishInfo::kPublishMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishInfo::PublishInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_publish_5finfo_2eproto::scc_info_PublishInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:superbai.sample.PublishInfo)
}
PublishInfo::PublishInfo(const PublishInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  message_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message_type().size() > 0) {
    message_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_type_);
  }
  publish_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publish_msg().size() > 0) {
    publish_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publish_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:superbai.sample.PublishInfo)
}

void PublishInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PublishInfo::~PublishInfo() {
  // @@protoc_insertion_point(destructor:superbai.sample.PublishInfo)
  SharedDtor();
}

void PublishInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PublishInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishInfo::descriptor() {
  ::protobuf_publish_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_publish_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishInfo& PublishInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_publish_5finfo_2eproto::scc_info_PublishInfo.base);
  return *internal_default_instance();
}


void PublishInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:superbai.sample.PublishInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PublishInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:superbai.sample.PublishInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "superbai.sample.PublishInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_type().data(), static_cast<int>(this->message_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "superbai.sample.PublishInfo.message_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string publish_msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publish_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publish_msg().data(), static_cast<int>(this->publish_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "superbai.sample.PublishInfo.publish_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:superbai.sample.PublishInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:superbai.sample.PublishInfo)
  return false;
#undef DO_
}

void PublishInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:superbai.sample.PublishInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "superbai.sample.PublishInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string message_type = 2;
  if (this->message_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_type().data(), static_cast<int>(this->message_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "superbai.sample.PublishInfo.message_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message_type(), output);
  }

  // string publish_msg = 3;
  if (this->publish_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_msg().data(), static_cast<int>(this->publish_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "superbai.sample.PublishInfo.publish_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->publish_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:superbai.sample.PublishInfo)
}

::google::protobuf::uint8* PublishInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:superbai.sample.PublishInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "superbai.sample.PublishInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string message_type = 2;
  if (this->message_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_type().data(), static_cast<int>(this->message_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "superbai.sample.PublishInfo.message_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message_type(), target);
  }

  // string publish_msg = 3;
  if (this->publish_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_msg().data(), static_cast<int>(this->publish_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "superbai.sample.PublishInfo.publish_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->publish_msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:superbai.sample.PublishInfo)
  return target;
}

size_t PublishInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:superbai.sample.PublishInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string message_type = 2;
  if (this->message_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_type());
  }

  // string publish_msg = 3;
  if (this->publish_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publish_msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:superbai.sample.PublishInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:superbai.sample.PublishInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:superbai.sample.PublishInfo)
    MergeFrom(*source);
  }
}

void PublishInfo::MergeFrom(const PublishInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:superbai.sample.PublishInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.message_type().size() > 0) {

    message_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_type_);
  }
  if (from.publish_msg().size() > 0) {

    publish_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publish_msg_);
  }
}

void PublishInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:superbai.sample.PublishInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishInfo::CopyFrom(const PublishInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:superbai.sample.PublishInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishInfo::IsInitialized() const {
  return true;
}

void PublishInfo::Swap(PublishInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishInfo::InternalSwap(PublishInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_type_.Swap(&other->message_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publish_msg_.Swap(&other->publish_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishInfo::GetMetadata() const {
  protobuf_publish_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_publish_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void work::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

work::work()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_publish_5finfo_2eproto::scc_info_work.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:superbai.sample.work)
}
work::work(const work& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:superbai.sample.work)
}

void work::SharedCtor() {
}

work::~work() {
  // @@protoc_insertion_point(destructor:superbai.sample.work)
  SharedDtor();
}

void work::SharedDtor() {
}

void work::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* work::descriptor() {
  ::protobuf_publish_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_publish_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const work& work::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_publish_5finfo_2eproto::scc_info_work.base);
  return *internal_default_instance();
}


void work::Clear() {
// @@protoc_insertion_point(message_clear_start:superbai.sample.work)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool work::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:superbai.sample.work)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:superbai.sample.work)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:superbai.sample.work)
  return false;
#undef DO_
}

void work::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:superbai.sample.work)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:superbai.sample.work)
}

::google::protobuf::uint8* work::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:superbai.sample.work)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:superbai.sample.work)
  return target;
}

size_t work::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:superbai.sample.work)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void work::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:superbai.sample.work)
  GOOGLE_DCHECK_NE(&from, this);
  const work* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const work>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:superbai.sample.work)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:superbai.sample.work)
    MergeFrom(*source);
  }
}

void work::MergeFrom(const work& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:superbai.sample.work)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void work::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:superbai.sample.work)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void work::CopyFrom(const work& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:superbai.sample.work)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool work::IsInitialized() const {
  return true;
}

void work::Swap(work* other) {
  if (other == this) return;
  InternalSwap(other);
}
void work::InternalSwap(work* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata work::GetMetadata() const {
  protobuf_publish_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_publish_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void date::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

date::date()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_publish_5finfo_2eproto::scc_info_date.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:superbai.sample.date)
}
date::date(const date& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:superbai.sample.date)
}

void date::SharedCtor() {
}

date::~date() {
  // @@protoc_insertion_point(destructor:superbai.sample.date)
  SharedDtor();
}

void date::SharedDtor() {
}

void date::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* date::descriptor() {
  ::protobuf_publish_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_publish_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const date& date::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_publish_5finfo_2eproto::scc_info_date.base);
  return *internal_default_instance();
}


void date::Clear() {
// @@protoc_insertion_point(message_clear_start:superbai.sample.date)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool date::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:superbai.sample.date)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:superbai.sample.date)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:superbai.sample.date)
  return false;
#undef DO_
}

void date::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:superbai.sample.date)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:superbai.sample.date)
}

::google::protobuf::uint8* date::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:superbai.sample.date)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:superbai.sample.date)
  return target;
}

size_t date::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:superbai.sample.date)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void date::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:superbai.sample.date)
  GOOGLE_DCHECK_NE(&from, this);
  const date* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const date>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:superbai.sample.date)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:superbai.sample.date)
    MergeFrom(*source);
  }
}

void date::MergeFrom(const date& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:superbai.sample.date)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void date::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:superbai.sample.date)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void date::CopyFrom(const date& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:superbai.sample.date)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool date::IsInitialized() const {
  return true;
}

void date::Swap(date* other) {
  if (other == this) return;
  InternalSwap(other);
}
void date::InternalSwap(date* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata date::GetMetadata() const {
  protobuf_publish_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_publish_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sample
}  // namespace superbai
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::superbai::sample::PublishInfo* Arena::CreateMaybeMessage< ::superbai::sample::PublishInfo >(Arena* arena) {
  return Arena::CreateInternal< ::superbai::sample::PublishInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::superbai::sample::work* Arena::CreateMaybeMessage< ::superbai::sample::work >(Arena* arena) {
  return Arena::CreateInternal< ::superbai::sample::work >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::superbai::sample::date* Arena::CreateMaybeMessage< ::superbai::sample::date >(Arena* arena) {
  return Arena::CreateInternal< ::superbai::sample::date >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
